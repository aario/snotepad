// scss/_global.scss
// Global component styles

html {
  position: relative;
  min-height: 100%;
  height: 100%;
  overflow: hidden;
}

body {
  height: 100%;
  overflow: hidden;
  // Body background/color should be controlled by Bootstrap vars via data-bs-theme
}

a {
  &:focus {
    outline: none;
  }
  // Link colors should use Bootstrap vars like var(--bs-link-color) etc.
}

// Main page wrapper
#wrapper {
  display: flex;
  height: 100%;
}

#content-wrapper {
  // Use body background variable, will change with theme
  background-color: var(--bs-secondary-bg); // Or var(--bs-body-bg) if it should match body
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  height: 100%;
}

#content {
  flex: 1 1 auto;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  position: relative;

  @include media-breakpoint-down(sm) {
    .container-fluid {
      padding-left: 0;
      padding-right: 0;
      .card-body {
        padding-left: 0;
        padding-right: 0;
      }
    }
  }
}

// Set container padding to match gutter width instead of default 15px
.container,
.container-fluid {
  padding-left: $grid-gutter-width;
  padding-right: $grid-gutter-width;
}

#content > .container-fluid {
  flex-grow: 1;
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  padding-top: 0;
  padding-bottom: 1.5rem;
   // Background should implicitly be that of #content-wrapper or body
}

#content > .container-fluid > .row {
  flex-grow: 1;
  display: flex;
}

#content > .container-fluid > .row > .col {
  // Column styles
}


// Scroll to top button
.scroll-to-top {
  position: fixed;
  right: 1rem;
  bottom: 1rem;
  display: none;
  width: 2.75rem;
  height: 2.75rem;
  text-align: center;
  // Use variables for colors
  color: var(--bs-white); // Fixed white text maybe? Or var(--bs-light)
  // Use rgba with CSS var for background
  background: rgba(var(--bs-dark-rgb), .5); // Translucent dark background
  line-height: 46px;
  z-index: 1031;
  border-radius: $border-radius; // Add rounding if desired

  &:focus,
  &:hover {
    color: var(--bs-white); // Fixed white text maybe?
  }
  &:hover {
    background: var(--bs-dark); // Solid dark on hover
  }
  i {
    font-weight: 800;
  }
}
